Notes
=====

* Copyright notice: I kept the copyright notice of Andy Parkins, since
  the script is ultimately derived from his.  But I added my own
  copyright notice, since the script is mostly rewritten.


To do
=====

* More testing.

* Each commit is threaded with one of the ReferenceChanges in the push
  that first introduced the commit.  The algorithm for grouping them
  could be made cleverer:

  * Distinguish between first and subsequent parents of merge commits.

  * Recognize specific git idioms (e.g., merging and deleting a
    feature branch) and describe them in more abstract terms in the
    commit emails.

* When a reference is created, show the branch(es) from which it
  appears to sprout.

* Use textwrap to correctly wrap prose output in the notification emails.

* Perhaps handle specially the case when multiple new tags point at
  the same commit (e.g., describe them all in a single email rather
  than one email per tag).

* Perhaps add an option to send emails to an arbitrary SMTP server
  using Python's smtplib rather than by using /usr/sbin/sendmail.

* Perhaps add an example plugin for working with LDAP.

* Perhaps make the templating system more flexible and easier to
  configure.


git-multimail-v2
================

* Configuration variables:

  * Rename config variables to emailhook.* rather than hooks.*.

  * Add an option to read the old configuration settings and migrate
    them to the new settings, doing consistency checks along the way.
    Optionally also delete the old settings.

  * Explain procedure in README file.

* Allow old-style announcement emails to be sent.

  * Send old-style (long) announcements to hooks.announcelist.

  * Send new-style refchange emails (as now) to hooks.refchangelist.

  * What to do for people who are subscribed to both lists?  Do we
    need a separate option for people who want refchange emails
    *except* for annotated tag change emails?  Perhaps just add a way
    to disable short annotated tag change emails entirely?

  * Perhaps support hooks.showrev in this context?

* Test that setting email recipient lists to the empty string really
  disables the sending of those emails.

* Allow email recipient lists to be set on multiple lines.

* Make it easier to skip sending refchange emails.

* Better document the variables that can be used in the templates.

* Better configurability:

  * Rename script to make it importable.

  * Make it easier to get the script functionality via an import and a
    function call.

  * Better support and document how to change template contents and
    make other configuration changes without editing the script.

* Make sure that email texts (i.e., in templates) are appropriate even
  for people who are subscribed to only some of the lists.

* Patch formatting:

  * Make sure that the script does not barf on binary files that are
    improperly marked.

  * Make sure that script does not emit enormous emails for
    apparently-text files that have extremely long lines.

  * Perhaps add a hook to allow patches to be cleaned up somehow
    before being sent.

* Write a README file:

  * Move main documentation to README file.

  * Explain how to migrate from the old script to the new one.

  * Document how to run the script both ways (as script or as Python
    import).

  * Document how to modify templates.

  * Document variables available in templates.

  * Document how to define a new Environment.

* Add an LDAP environment (?)

* Make sure that default values for envelopesender, From, Reply-To,
  etc. are OK.

